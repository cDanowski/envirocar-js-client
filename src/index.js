/*
 * enviroCar REST API
 * enviroCar REST API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@envirocar.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.41
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from './ApiClient';
import {Activities} from './model/Activities';
import {Activity} from './model/Activity';
import {Announcement} from './model/Announcement';
import {Announcements} from './model/Announcements';
import {Badge} from './model/Badge';
import {Badges} from './model/Badges';
import {Base} from './model/Base';
import {CarProperties} from './model/CarProperties';
import {CarProperties1} from './model/CarProperties1';
import {CarType} from './model/CarType';
import {CarpropertiesProperties} from './model/CarpropertiesProperties';
import {CircularReference} from './model/CircularReference';
import {Components} from './model/Components';
import {Contact} from './model/Contact';
import {Discriminator} from './model/Discriminator';
import {Exception} from './model/Exception';
import {Exception1} from './model/Exception1';
import {ExternalDocumentation} from './model/ExternalDocumentation';
import {Fueling} from './model/Fueling';
import {FuelingCreate} from './model/FuelingCreate';
import {Fuelings} from './model/Fuelings';
import {Geometry} from './model/Geometry';
import {Group} from './model/Group';
import {GroupActivity} from './model/GroupActivity';
import {GroupCreate} from './model/GroupCreate';
import {GroupModify} from './model/GroupModify';
import {Groups} from './model/Groups';
import {Info} from './model/Info';
import {License} from './model/License';
import {Linestring} from './model/Linestring';
import {MailAddress} from './model/MailAddress';
import {MaybeCircularException} from './model/MaybeCircularException';
import {Measurement} from './model/Measurement';
import {MeasurementCreate} from './model/MeasurementCreate';
import {MeasurementProperties} from './model/MeasurementProperties';
import {MeasurementcreateProperties} from './model/MeasurementcreateProperties';
import {MeasurementcreatePropertiesPhenomenons} from './model/MeasurementcreatePropertiesPhenomenons';
import {Measurements} from './model/Measurements';
import {Model20210928} from './model/Model20210928';
import {Multilinestring} from './model/Multilinestring';
import {Multipoint} from './model/Multipoint';
import {Multipolygon} from './model/Multipolygon';
import {NumberWithUnit} from './model/NumberWithUnit';
import {OneOfSchemaAdditionalProperties} from './model/OneOfSchemaAdditionalProperties';
import {OneOfSchemaAllOfItems} from './model/OneOfSchemaAllOfItems';
import {OneOfSchemaAnyOfItems} from './model/OneOfSchemaAnyOfItems';
import {OneOfSchemaItems} from './model/OneOfSchemaItems';
import {OneOfSchemaNot} from './model/OneOfSchemaNot';
import {OneOfSchemaOneOfItems} from './model/OneOfSchemaOneOfItems';
import {OneOfactivity} from './model/OneOfactivity';
import {OneOfmeasurementcreatePropertiesPhenomenonsValue} from './model/OneOfmeasurementcreatePropertiesPhenomenonsValue';
import {OptionalUserProperties} from './model/OptionalUserProperties';
import {Paths} from './model/Paths';
import {Phenomenon} from './model/Phenomenon';
import {PhenomenonCreate} from './model/PhenomenonCreate';
import {Phenomenons} from './model/Phenomenons';
import {Point} from './model/Point';
import {Polygon} from './model/Polygon';
import {PrivacyStatement} from './model/PrivacyStatement';
import {PrivacyStatements} from './model/PrivacyStatements';
import {PrivacystatementsPrivacyStatements} from './model/PrivacystatementsPrivacyStatements';
import {Range} from './model/Range';
import {Reference} from './model/Reference';
import {Root} from './model/Root';
import {Schema} from './model/Schema';
import {Schemas} from './model/Schemas';
import {SecurityRequirement} from './model/SecurityRequirement';
import {SelfActivity} from './model/SelfActivity';
import {Sensor} from './model/Sensor';
import {SensorCreate} from './model/SensorCreate';
import {SensorProperties} from './model/SensorProperties';
import {Sensors} from './model/Sensors';
import {Server} from './model/Server';
import {ServerVariable} from './model/ServerVariable';
import {Statistic} from './model/Statistic';
import {Statistics} from './model/Statistics';
import {Tag} from './model/Tag';
import {TemporalFilter} from './model/TemporalFilter';
import {TermsOfUse} from './model/TermsOfUse';
import {TermsOfUseInstance} from './model/TermsOfUseInstance';
import {Track} from './model/Track';
import {TrackActivity} from './model/TrackActivity';
import {TrackCreate} from './model/TrackCreate';
import {TrackModify} from './model/TrackModify';
import {TrackProperties} from './model/TrackProperties';
import {TrackReference} from './model/TrackReference';
import {TrackStatus} from './model/TrackStatus';
import {TrackcreateProperties} from './model/TrackcreateProperties';
import {TrackmodifyProperties} from './model/TrackmodifyProperties';
import {Tracks} from './model/Tracks';
import {User} from './model/User';
import {UserActivity} from './model/UserActivity';
import {UserCreate} from './model/UserCreate';
import {UserModify} from './model/UserModify';
import {UserRef} from './model/UserRef';
import {UserStatistic} from './model/UserStatistic';
import {UserStatisticTrackSummaries} from './model/UserStatisticTrackSummaries';
import {Username} from './model/Username';
import {Users} from './model/Users';
import {XML} from './model/XML';
import {AnnouncementsApi} from './api/AnnouncementsApi';
import {BadgesApi} from './api/BadgesApi';
import {FuelingsApi} from './api/FuelingsApi';
import {GeneralApi} from './api/GeneralApi';
import {GroupsApi} from './api/GroupsApi';
import {MeasurementsApi} from './api/MeasurementsApi';
import {PhenomenonsApi} from './api/PhenomenonsApi';
import {SchemasApi} from './api/SchemasApi';
import {SensorsApi} from './api/SensorsApi';
import {StatisticsApi} from './api/StatisticsApi';
import {TermsApi} from './api/TermsApi';
import {TracksApi} from './api/TracksApi';
import {UsersApi} from './api/UsersApi';

/**
* enviroCar_REST_API.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var EnviroCarRestApi = require('index'); // See note below*.
* var xxxSvc = new EnviroCarRestApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new EnviroCarRestApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new EnviroCarRestApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new EnviroCarRestApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Activities model constructor.
     * @property {module:model/Activities}
     */
    Activities,

    /**
     * The Activity model constructor.
     * @property {module:model/Activity}
     */
    Activity,

    /**
     * The Announcement model constructor.
     * @property {module:model/Announcement}
     */
    Announcement,

    /**
     * The Announcements model constructor.
     * @property {module:model/Announcements}
     */
    Announcements,

    /**
     * The Badge model constructor.
     * @property {module:model/Badge}
     */
    Badge,

    /**
     * The Badges model constructor.
     * @property {module:model/Badges}
     */
    Badges,

    /**
     * The Base model constructor.
     * @property {module:model/Base}
     */
    Base,

    /**
     * The CarProperties model constructor.
     * @property {module:model/CarProperties}
     */
    CarProperties,

    /**
     * The CarProperties1 model constructor.
     * @property {module:model/CarProperties1}
     */
    CarProperties1,

    /**
     * The CarType model constructor.
     * @property {module:model/CarType}
     */
    CarType,

    /**
     * The CarpropertiesProperties model constructor.
     * @property {module:model/CarpropertiesProperties}
     */
    CarpropertiesProperties,

    /**
     * The CircularReference model constructor.
     * @property {module:model/CircularReference}
     */
    CircularReference,

    /**
     * The Components model constructor.
     * @property {module:model/Components}
     */
    Components,

    /**
     * The Contact model constructor.
     * @property {module:model/Contact}
     */
    Contact,

    /**
     * The Discriminator model constructor.
     * @property {module:model/Discriminator}
     */
    Discriminator,

    /**
     * The Exception model constructor.
     * @property {module:model/Exception}
     */
    Exception,

    /**
     * The Exception1 model constructor.
     * @property {module:model/Exception1}
     */
    Exception1,

    /**
     * The ExternalDocumentation model constructor.
     * @property {module:model/ExternalDocumentation}
     */
    ExternalDocumentation,

    /**
     * The Fueling model constructor.
     * @property {module:model/Fueling}
     */
    Fueling,

    /**
     * The FuelingCreate model constructor.
     * @property {module:model/FuelingCreate}
     */
    FuelingCreate,

    /**
     * The Fuelings model constructor.
     * @property {module:model/Fuelings}
     */
    Fuelings,

    /**
     * The Geometry model constructor.
     * @property {module:model/Geometry}
     */
    Geometry,

    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group,

    /**
     * The GroupActivity model constructor.
     * @property {module:model/GroupActivity}
     */
    GroupActivity,

    /**
     * The GroupCreate model constructor.
     * @property {module:model/GroupCreate}
     */
    GroupCreate,

    /**
     * The GroupModify model constructor.
     * @property {module:model/GroupModify}
     */
    GroupModify,

    /**
     * The Groups model constructor.
     * @property {module:model/Groups}
     */
    Groups,

    /**
     * The Info model constructor.
     * @property {module:model/Info}
     */
    Info,

    /**
     * The License model constructor.
     * @property {module:model/License}
     */
    License,

    /**
     * The Linestring model constructor.
     * @property {module:model/Linestring}
     */
    Linestring,

    /**
     * The MailAddress model constructor.
     * @property {module:model/MailAddress}
     */
    MailAddress,

    /**
     * The MaybeCircularException model constructor.
     * @property {module:model/MaybeCircularException}
     */
    MaybeCircularException,

    /**
     * The Measurement model constructor.
     * @property {module:model/Measurement}
     */
    Measurement,

    /**
     * The MeasurementCreate model constructor.
     * @property {module:model/MeasurementCreate}
     */
    MeasurementCreate,

    /**
     * The MeasurementProperties model constructor.
     * @property {module:model/MeasurementProperties}
     */
    MeasurementProperties,

    /**
     * The MeasurementcreateProperties model constructor.
     * @property {module:model/MeasurementcreateProperties}
     */
    MeasurementcreateProperties,

    /**
     * The MeasurementcreatePropertiesPhenomenons model constructor.
     * @property {module:model/MeasurementcreatePropertiesPhenomenons}
     */
    MeasurementcreatePropertiesPhenomenons,

    /**
     * The Measurements model constructor.
     * @property {module:model/Measurements}
     */
    Measurements,

    /**
     * The Model20210928 model constructor.
     * @property {module:model/Model20210928}
     */
    Model20210928,

    /**
     * The Multilinestring model constructor.
     * @property {module:model/Multilinestring}
     */
    Multilinestring,

    /**
     * The Multipoint model constructor.
     * @property {module:model/Multipoint}
     */
    Multipoint,

    /**
     * The Multipolygon model constructor.
     * @property {module:model/Multipolygon}
     */
    Multipolygon,

    /**
     * The NumberWithUnit model constructor.
     * @property {module:model/NumberWithUnit}
     */
    NumberWithUnit,

    /**
     * The OneOfSchemaAdditionalProperties model constructor.
     * @property {module:model/OneOfSchemaAdditionalProperties}
     */
    OneOfSchemaAdditionalProperties,

    /**
     * The OneOfSchemaAllOfItems model constructor.
     * @property {module:model/OneOfSchemaAllOfItems}
     */
    OneOfSchemaAllOfItems,

    /**
     * The OneOfSchemaAnyOfItems model constructor.
     * @property {module:model/OneOfSchemaAnyOfItems}
     */
    OneOfSchemaAnyOfItems,

    /**
     * The OneOfSchemaItems model constructor.
     * @property {module:model/OneOfSchemaItems}
     */
    OneOfSchemaItems,

    /**
     * The OneOfSchemaNot model constructor.
     * @property {module:model/OneOfSchemaNot}
     */
    OneOfSchemaNot,

    /**
     * The OneOfSchemaOneOfItems model constructor.
     * @property {module:model/OneOfSchemaOneOfItems}
     */
    OneOfSchemaOneOfItems,

    /**
     * The OneOfactivity model constructor.
     * @property {module:model/OneOfactivity}
     */
    OneOfactivity,

    /**
     * The OneOfmeasurementcreatePropertiesPhenomenonsValue model constructor.
     * @property {module:model/OneOfmeasurementcreatePropertiesPhenomenonsValue}
     */
    OneOfmeasurementcreatePropertiesPhenomenonsValue,

    /**
     * The OptionalUserProperties model constructor.
     * @property {module:model/OptionalUserProperties}
     */
    OptionalUserProperties,

    /**
     * The Paths model constructor.
     * @property {module:model/Paths}
     */
    Paths,

    /**
     * The Phenomenon model constructor.
     * @property {module:model/Phenomenon}
     */
    Phenomenon,

    /**
     * The PhenomenonCreate model constructor.
     * @property {module:model/PhenomenonCreate}
     */
    PhenomenonCreate,

    /**
     * The Phenomenons model constructor.
     * @property {module:model/Phenomenons}
     */
    Phenomenons,

    /**
     * The Point model constructor.
     * @property {module:model/Point}
     */
    Point,

    /**
     * The Polygon model constructor.
     * @property {module:model/Polygon}
     */
    Polygon,

    /**
     * The PrivacyStatement model constructor.
     * @property {module:model/PrivacyStatement}
     */
    PrivacyStatement,

    /**
     * The PrivacyStatements model constructor.
     * @property {module:model/PrivacyStatements}
     */
    PrivacyStatements,

    /**
     * The PrivacystatementsPrivacyStatements model constructor.
     * @property {module:model/PrivacystatementsPrivacyStatements}
     */
    PrivacystatementsPrivacyStatements,

    /**
     * The Range model constructor.
     * @property {module:model/Range}
     */
    Range,

    /**
     * The Reference model constructor.
     * @property {module:model/Reference}
     */
    Reference,

    /**
     * The Root model constructor.
     * @property {module:model/Root}
     */
    Root,

    /**
     * The Schema model constructor.
     * @property {module:model/Schema}
     */
    Schema,

    /**
     * The Schemas model constructor.
     * @property {module:model/Schemas}
     */
    Schemas,

    /**
     * The SecurityRequirement model constructor.
     * @property {module:model/SecurityRequirement}
     */
    SecurityRequirement,

    /**
     * The SelfActivity model constructor.
     * @property {module:model/SelfActivity}
     */
    SelfActivity,

    /**
     * The Sensor model constructor.
     * @property {module:model/Sensor}
     */
    Sensor,

    /**
     * The SensorCreate model constructor.
     * @property {module:model/SensorCreate}
     */
    SensorCreate,

    /**
     * The SensorProperties model constructor.
     * @property {module:model/SensorProperties}
     */
    SensorProperties,

    /**
     * The Sensors model constructor.
     * @property {module:model/Sensors}
     */
    Sensors,

    /**
     * The Server model constructor.
     * @property {module:model/Server}
     */
    Server,

    /**
     * The ServerVariable model constructor.
     * @property {module:model/ServerVariable}
     */
    ServerVariable,

    /**
     * The Statistic model constructor.
     * @property {module:model/Statistic}
     */
    Statistic,

    /**
     * The Statistics model constructor.
     * @property {module:model/Statistics}
     */
    Statistics,

    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag,

    /**
     * The TemporalFilter model constructor.
     * @property {module:model/TemporalFilter}
     */
    TemporalFilter,

    /**
     * The TermsOfUse model constructor.
     * @property {module:model/TermsOfUse}
     */
    TermsOfUse,

    /**
     * The TermsOfUseInstance model constructor.
     * @property {module:model/TermsOfUseInstance}
     */
    TermsOfUseInstance,

    /**
     * The Track model constructor.
     * @property {module:model/Track}
     */
    Track,

    /**
     * The TrackActivity model constructor.
     * @property {module:model/TrackActivity}
     */
    TrackActivity,

    /**
     * The TrackCreate model constructor.
     * @property {module:model/TrackCreate}
     */
    TrackCreate,

    /**
     * The TrackModify model constructor.
     * @property {module:model/TrackModify}
     */
    TrackModify,

    /**
     * The TrackProperties model constructor.
     * @property {module:model/TrackProperties}
     */
    TrackProperties,

    /**
     * The TrackReference model constructor.
     * @property {module:model/TrackReference}
     */
    TrackReference,

    /**
     * The TrackStatus model constructor.
     * @property {module:model/TrackStatus}
     */
    TrackStatus,

    /**
     * The TrackcreateProperties model constructor.
     * @property {module:model/TrackcreateProperties}
     */
    TrackcreateProperties,

    /**
     * The TrackmodifyProperties model constructor.
     * @property {module:model/TrackmodifyProperties}
     */
    TrackmodifyProperties,

    /**
     * The Tracks model constructor.
     * @property {module:model/Tracks}
     */
    Tracks,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserActivity model constructor.
     * @property {module:model/UserActivity}
     */
    UserActivity,

    /**
     * The UserCreate model constructor.
     * @property {module:model/UserCreate}
     */
    UserCreate,

    /**
     * The UserModify model constructor.
     * @property {module:model/UserModify}
     */
    UserModify,

    /**
     * The UserRef model constructor.
     * @property {module:model/UserRef}
     */
    UserRef,

    /**
     * The UserStatistic model constructor.
     * @property {module:model/UserStatistic}
     */
    UserStatistic,

    /**
     * The UserStatisticTrackSummaries model constructor.
     * @property {module:model/UserStatisticTrackSummaries}
     */
    UserStatisticTrackSummaries,

    /**
     * The Username model constructor.
     * @property {module:model/Username}
     */
    Username,

    /**
     * The Users model constructor.
     * @property {module:model/Users}
     */
    Users,

    /**
     * The XML model constructor.
     * @property {module:model/XML}
     */
    XML,

    /**
    * The AnnouncementsApi service constructor.
    * @property {module:api/AnnouncementsApi}
    */
    AnnouncementsApi,

    /**
    * The BadgesApi service constructor.
    * @property {module:api/BadgesApi}
    */
    BadgesApi,

    /**
    * The FuelingsApi service constructor.
    * @property {module:api/FuelingsApi}
    */
    FuelingsApi,

    /**
    * The GeneralApi service constructor.
    * @property {module:api/GeneralApi}
    */
    GeneralApi,

    /**
    * The GroupsApi service constructor.
    * @property {module:api/GroupsApi}
    */
    GroupsApi,

    /**
    * The MeasurementsApi service constructor.
    * @property {module:api/MeasurementsApi}
    */
    MeasurementsApi,

    /**
    * The PhenomenonsApi service constructor.
    * @property {module:api/PhenomenonsApi}
    */
    PhenomenonsApi,

    /**
    * The SchemasApi service constructor.
    * @property {module:api/SchemasApi}
    */
    SchemasApi,

    /**
    * The SensorsApi service constructor.
    * @property {module:api/SensorsApi}
    */
    SensorsApi,

    /**
    * The StatisticsApi service constructor.
    * @property {module:api/StatisticsApi}
    */
    StatisticsApi,

    /**
    * The TermsApi service constructor.
    * @property {module:api/TermsApi}
    */
    TermsApi,

    /**
    * The TracksApi service constructor.
    * @property {module:api/TracksApi}
    */
    TracksApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
