/*
 * enviroCar REST API
 * enviroCar REST API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@envirocar.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.41
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Discriminator} from './Discriminator';
import {ExternalDocumentation} from './ExternalDocumentation';
import {XML} from './XML';

/**
 * The Schema model module.
 * @module model/Schema
 * @version 1.0.0
 */
export class Schema {
  /**
   * Constructs a new <code>Schema</code>.
   * @alias module:model/Schema
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Schema</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Schema} obj Optional instance to populate.
   * @return {module:model/Schema} The populated <code>Schema</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Schema();
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('multipleOf'))
        obj.multipleOf = ApiClient.convertToType(data['multipleOf'], 'Number');
      if (data.hasOwnProperty('maximum'))
        obj.maximum = ApiClient.convertToType(data['maximum'], 'Number');
      if (data.hasOwnProperty('exclusiveMaximum'))
        obj.exclusiveMaximum = ApiClient.convertToType(data['exclusiveMaximum'], 'Boolean');
      if (data.hasOwnProperty('minimum'))
        obj.minimum = ApiClient.convertToType(data['minimum'], 'Number');
      if (data.hasOwnProperty('exclusiveMinimum'))
        obj.exclusiveMinimum = ApiClient.convertToType(data['exclusiveMinimum'], 'Boolean');
      if (data.hasOwnProperty('maxLength'))
        obj.maxLength = ApiClient.convertToType(data['maxLength'], 'Number');
      if (data.hasOwnProperty('minLength'))
        obj.minLength = ApiClient.convertToType(data['minLength'], 'Number');
      if (data.hasOwnProperty('pattern'))
        obj.pattern = ApiClient.convertToType(data['pattern'], 'String');
      if (data.hasOwnProperty('maxItems'))
        obj.maxItems = ApiClient.convertToType(data['maxItems'], 'Number');
      if (data.hasOwnProperty('minItems'))
        obj.minItems = ApiClient.convertToType(data['minItems'], 'Number');
      if (data.hasOwnProperty('uniqueItems'))
        obj.uniqueItems = ApiClient.convertToType(data['uniqueItems'], 'Boolean');
      if (data.hasOwnProperty('maxProperties'))
        obj.maxProperties = ApiClient.convertToType(data['maxProperties'], 'Number');
      if (data.hasOwnProperty('minProperties'))
        obj.minProperties = ApiClient.convertToType(data['minProperties'], 'Number');
      if (data.hasOwnProperty('required'))
        obj.required = ApiClient.convertToType(data['required'], ['String']);
      if (data.hasOwnProperty('enum'))
        obj._enum = ApiClient.convertToType(data['enum'], [Object]);
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('not'))
        obj.not = ApiClient.convertToType(data['not'], Object);
      if (data.hasOwnProperty('allOf'))
        obj.allOf = ApiClient.convertToType(data['allOf'], [OneOfSchemaAllOfItems]);
      if (data.hasOwnProperty('oneOf'))
        obj.oneOf = ApiClient.convertToType(data['oneOf'], [OneOfSchemaOneOfItems]);
      if (data.hasOwnProperty('anyOf'))
        obj.anyOf = ApiClient.convertToType(data['anyOf'], [OneOfSchemaAnyOfItems]);
      if (data.hasOwnProperty('items'))
        obj.items = ApiClient.convertToType(data['items'], Object);
      if (data.hasOwnProperty('properties'))
        obj.properties = ApiClient.convertToType(data['properties'], {'String': Object});
      if (data.hasOwnProperty('additionalProperties'))
        obj.additionalProperties = ApiClient.convertToType(data['additionalProperties'], Object);
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('format'))
        obj.format = ApiClient.convertToType(data['format'], 'String');
      if (data.hasOwnProperty('default'))
        obj._default = ApiClient.convertToType(data['default'], Object);
      if (data.hasOwnProperty('nullable'))
        obj.nullable = ApiClient.convertToType(data['nullable'], 'Boolean');
      if (data.hasOwnProperty('discriminator'))
        obj.discriminator = Discriminator.constructFromObject(data['discriminator']);
      if (data.hasOwnProperty('readOnly'))
        obj.readOnly = ApiClient.convertToType(data['readOnly'], 'Boolean');
      if (data.hasOwnProperty('writeOnly'))
        obj.writeOnly = ApiClient.convertToType(data['writeOnly'], 'Boolean');
      if (data.hasOwnProperty('example'))
        obj.example = ApiClient.convertToType(data['example'], Object);
      if (data.hasOwnProperty('externalDocs'))
        obj.externalDocs = ExternalDocumentation.constructFromObject(data['externalDocs']);
      if (data.hasOwnProperty('deprecated'))
        obj.deprecated = ApiClient.convertToType(data['deprecated'], 'Boolean');
      if (data.hasOwnProperty('xml'))
        obj.xml = XML.constructFromObject(data['xml']);
    }
    return obj;
  }
}

/**
 * @member {String} title
 */
Schema.prototype.title = undefined;

/**
 * @member {Number} multipleOf
 */
Schema.prototype.multipleOf = undefined;

/**
 * @member {Number} maximum
 */
Schema.prototype.maximum = undefined;

/**
 * @member {Boolean} exclusiveMaximum
 * @default false
 */
Schema.prototype.exclusiveMaximum = false;

/**
 * @member {Number} minimum
 */
Schema.prototype.minimum = undefined;

/**
 * @member {Boolean} exclusiveMinimum
 * @default false
 */
Schema.prototype.exclusiveMinimum = false;

/**
 * @member {Number} maxLength
 */
Schema.prototype.maxLength = undefined;

/**
 * @member {Number} minLength
 * @default 0
 */
Schema.prototype.minLength = 0;

/**
 * @member {String} pattern
 */
Schema.prototype.pattern = undefined;

/**
 * @member {Number} maxItems
 */
Schema.prototype.maxItems = undefined;

/**
 * @member {Number} minItems
 * @default 0
 */
Schema.prototype.minItems = 0;

/**
 * @member {Boolean} uniqueItems
 * @default false
 */
Schema.prototype.uniqueItems = false;

/**
 * @member {Number} maxProperties
 */
Schema.prototype.maxProperties = undefined;

/**
 * @member {Number} minProperties
 * @default 0
 */
Schema.prototype.minProperties = 0;

/**
 * @member {Array.<String>} required
 */
Schema.prototype.required = undefined;

/**
 * @member {Array.<Object>} _enum
 */
Schema.prototype._enum = undefined;

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Schema.TypeEnum = {
  /**
   * value: "array"
   * @const
   */
  _array: "array",

  /**
   * value: "boolean"
   * @const
   */
  _boolean: "boolean",

  /**
   * value: "integer"
   * @const
   */
  integer: "integer",

  /**
   * value: "number"
   * @const
   */
  _number: "number",

  /**
   * value: "object"
   * @const
   */
  _object: "object",

  /**
   * value: "string"
   * @const
   */
  _string: "string"
};
/**
 * @member {module:model/Schema.TypeEnum} type
 */
Schema.prototype.type = undefined;

/**
 * @member {Object} not
 */
Schema.prototype.not = undefined;

/**
 * @member {Array.<Object>} allOf
 */
Schema.prototype.allOf = undefined;

/**
 * @member {Array.<Object>} oneOf
 */
Schema.prototype.oneOf = undefined;

/**
 * @member {Array.<Object>} anyOf
 */
Schema.prototype.anyOf = undefined;

/**
 * @member {Object} items
 */
Schema.prototype.items = undefined;

/**
 * @member {Object.<String, Object>} properties
 */
Schema.prototype.properties = undefined;

/**
 * @member {Object} additionalProperties
 */
Schema.prototype.additionalProperties = undefined;

/**
 * @member {String} description
 */
Schema.prototype.description = undefined;

/**
 * @member {String} format
 */
Schema.prototype.format = undefined;

/**
 * @member {Object} _default
 */
Schema.prototype._default = undefined;

/**
 * @member {Boolean} nullable
 * @default false
 */
Schema.prototype.nullable = false;

/**
 * @member {module:model/Discriminator} discriminator
 */
Schema.prototype.discriminator = undefined;

/**
 * @member {Boolean} readOnly
 * @default false
 */
Schema.prototype.readOnly = false;

/**
 * @member {Boolean} writeOnly
 * @default false
 */
Schema.prototype.writeOnly = false;

/**
 * @member {Object} example
 */
Schema.prototype.example = undefined;

/**
 * @member {module:model/ExternalDocumentation} externalDocs
 */
Schema.prototype.externalDocs = undefined;

/**
 * @member {Boolean} deprecated
 * @default false
 */
Schema.prototype.deprecated = false;

/**
 * @member {module:model/XML} xml
 */
Schema.prototype.xml = undefined;

// Implement OneOfSchemaNot interface:
// Implement OneOfSchemaAllOfItems interface:
// Implement OneOfSchemaOneOfItems interface:
// Implement OneOfSchemaAnyOfItems interface:
// Implement OneOfSchemaItems interface:
// Implement OneOfSchemaAdditionalProperties interface:
