/*
 * enviroCar REST API
 * enviroCar REST API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@envirocar.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.41
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Geometry} from './Geometry';
import {MeasurementProperties} from './MeasurementProperties';

/**
 * The Measurement model module.
 * @module model/Measurement
 * @version 1.0.0
 */
export class Measurement {
  /**
   * Constructs a new <code>Measurement</code>.
   * @alias module:model/Measurement
   * @class
   * @param type {module:model/Measurement.TypeEnum} 
   * @param geometry {module:model/Geometry} 
   * @param properties {module:model/MeasurementProperties} 
   */
  constructor(type, geometry, properties) {
    this.type = type;
    this.geometry = geometry;
    this.properties = properties;
  }

  /**
   * Constructs a <code>Measurement</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Measurement} obj Optional instance to populate.
   * @return {module:model/Measurement} The populated <code>Measurement</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Measurement();
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('geometry'))
        obj.geometry = Geometry.constructFromObject(data['geometry']);
      if (data.hasOwnProperty('properties'))
        obj.properties = MeasurementProperties.constructFromObject(data['properties']);
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Measurement.TypeEnum = {
  /**
   * value: "Feature"
   * @const
   */
  feature: "Feature"
};
/**
 * @member {module:model/Measurement.TypeEnum} type
 */
Measurement.prototype.type = undefined;

/**
 * @member {module:model/Geometry} geometry
 */
Measurement.prototype.geometry = undefined;

/**
 * @member {module:model/MeasurementProperties} properties
 */
Measurement.prototype.properties = undefined;

