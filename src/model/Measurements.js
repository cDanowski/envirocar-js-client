/*
 * enviroCar REST API
 * enviroCar REST API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@envirocar.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.41
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Measurement} from './Measurement';

/**
 * The Measurements model module.
 * @module model/Measurements
 * @version 1.0.0
 */
export class Measurements {
  /**
   * Constructs a new <code>Measurements</code>.
   * @alias module:model/Measurements
   * @class
   * @param type {module:model/Measurements.TypeEnum} 
   * @param features {Array.<module:model/Measurement>} 
   */
  constructor(type, features) {
    this.type = type;
    this.features = features;
  }

  /**
   * Constructs a <code>Measurements</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Measurements} obj Optional instance to populate.
   * @return {module:model/Measurements} The populated <code>Measurements</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Measurements();
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('features'))
        obj.features = ApiClient.convertToType(data['features'], [Measurement]);
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Measurements.TypeEnum = {
  /**
   * value: "FeatureCollection"
   * @const
   */
  featureCollection: "FeatureCollection"
};
/**
 * @member {module:model/Measurements.TypeEnum} type
 */
Measurements.prototype.type = undefined;

/**
 * @member {Array.<module:model/Measurement>} features
 */
Measurements.prototype.features = undefined;

