/*
 * enviroCar REST API
 * enviroCar REST API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@envirocar.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.41
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The XML model module.
 * @module model/XML
 * @version 1.0.0
 */
export class XML {
  /**
   * Constructs a new <code>XML</code>.
   * @alias module:model/XML
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>XML</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/XML} obj Optional instance to populate.
   * @return {module:model/XML} The populated <code>XML</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new XML();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('namespace'))
        obj.namespace = ApiClient.convertToType(data['namespace'], 'String');
      if (data.hasOwnProperty('prefix'))
        obj.prefix = ApiClient.convertToType(data['prefix'], 'String');
      if (data.hasOwnProperty('attribute'))
        obj.attribute = ApiClient.convertToType(data['attribute'], 'Boolean');
      if (data.hasOwnProperty('wrapped'))
        obj.wrapped = ApiClient.convertToType(data['wrapped'], 'Boolean');
    }
    return obj;
  }
}

/**
 * @member {String} name
 */
XML.prototype.name = undefined;

/**
 * @member {String} namespace
 */
XML.prototype.namespace = undefined;

/**
 * @member {String} prefix
 */
XML.prototype.prefix = undefined;

/**
 * @member {Boolean} attribute
 * @default false
 */
XML.prototype.attribute = false;

/**
 * @member {Boolean} wrapped
 * @default false
 */
XML.prototype.wrapped = false;

