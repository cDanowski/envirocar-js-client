/*
 * enviroCar REST API
 * enviroCar REST API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@envirocar.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.41
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EnviroCarRestApi);
  }
}(this, function(expect, EnviroCarRestApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Components', function() {
      beforeEach(function() {
        instance = new EnviroCarRestApi.Components();
      });

      it('should create an instance of Components', function() {
        // TODO: update the code to test Components
        expect(instance).to.be.a(EnviroCarRestApi.Components);
      });

      it('should have the property schemas (base name: "schemas")', function() {
        // TODO: update the code to test the property schemas
        expect(instance).to.have.property('schemas');
        // expect(instance.schemas).to.be(expectedValueLiteral);
      });

      it('should have the property responses (base name: "responses")', function() {
        // TODO: update the code to test the property responses
        expect(instance).to.have.property('responses');
        // expect(instance.responses).to.be(expectedValueLiteral);
      });

      it('should have the property parameters (base name: "parameters")', function() {
        // TODO: update the code to test the property parameters
        expect(instance).to.have.property('parameters');
        // expect(instance.parameters).to.be(expectedValueLiteral);
      });

      it('should have the property examples (base name: "examples")', function() {
        // TODO: update the code to test the property examples
        expect(instance).to.have.property('examples');
        // expect(instance.examples).to.be(expectedValueLiteral);
      });

      it('should have the property requestBodies (base name: "requestBodies")', function() {
        // TODO: update the code to test the property requestBodies
        expect(instance).to.have.property('requestBodies');
        // expect(instance.requestBodies).to.be(expectedValueLiteral);
      });

      it('should have the property headers (base name: "headers")', function() {
        // TODO: update the code to test the property headers
        expect(instance).to.have.property('headers');
        // expect(instance.headers).to.be(expectedValueLiteral);
      });

      it('should have the property securitySchemes (base name: "securitySchemes")', function() {
        // TODO: update the code to test the property securitySchemes
        expect(instance).to.have.property('securitySchemes');
        // expect(instance.securitySchemes).to.be(expectedValueLiteral);
      });

      it('should have the property links (base name: "links")', function() {
        // TODO: update the code to test the property links
        expect(instance).to.have.property('links');
        // expect(instance.links).to.be(expectedValueLiteral);
      });

      it('should have the property callbacks (base name: "callbacks")', function() {
        // TODO: update the code to test the property callbacks
        expect(instance).to.have.property('callbacks');
        // expect(instance.callbacks).to.be(expectedValueLiteral);
      });

    });
  });

}));
